---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: id_HTML5
title: Forms

# post specific
# if not specified, .name will be used from _data/owner/[language].yml
#author: ""
# multiple category is not supported
category: HTML&CSS
# multiple tag entries are possible
tags: [HTML]
# thumbnail image for post
img: ":post_pic2.jpg"
# disable comments on this page
comments_disable: true

# publish date
date: 2022-09-08 09:14:00 +0900
# seo
# if not specified, date will be used.
#meta_modify_date: 2021-10-14 18:47:35 +0900
# check the meta_common_description in _data/owner/[language].yml
#meta_description: ""

# optional
# if you enabled image_viewer_posts you don't need to enable this. This is only if image_viewer_posts = false
#image_viewer_on: true
# if you enabled image_lazy_loader_posts you don't need to enable this. This is only if image_lazy_loader_posts = false
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: true
---

## 1. form 기본 속성

### 1.1 폼 동작 방식

![Untitled](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/eed05f98-2c67-4a0f-b350-5a45b7681f55/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20220907%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20220907T160505Z&X-Amz-Expires=86400&X-Amz-Signature=1f6552a511f89a57e1e65e585d3580ae102d1652a4c00667ba0c7316e4f33bef&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22&x-id=GetObject)

<aside>

- <strong>server</strong>: 서빙(24시간 돌아가는 컴퓨터, 대부분 IP연결<br>
- <strong>Web server</strong>: 정적 파일을 서빙 (PHP와 같은 프로그래밍 언어도 처리하긴 합니다)<br>
- <strong>App server</strong>: 두뇌 역할<br>
- <strong>DB</strong>: 데이터 저장(<>이미</>질의 경우 경로만 저장<br>
- <strong>API Server</strong>: 카페 카운터 직원<br>
  -> 한 컴퓨터에 웹서버 + 앱서버 + DB가 있을 수도 있음<br>

</aside>

<br>

1. form에 데이터 입력
2. action에 따라 데이터가 웹 서버로 이동
3. 웹 서버는 데이터를 처리하기 위해 APP을 호출합니다. 이때 APP은 물리적으로 별도의 서버일 수도 있습니다.
4. 필요에 따라 APP은 DB로 데이터를 전송합니다. 이때 DB는 물리적으로 별도의 서버일 수도 있습니다.
5. DB에서 CRUD 작업이 일어나고 작업 결과를 APP으로, WEB으로 전송합니다.

   | 이름   | 조작 | SQL    | method |
   | ------ | ---- | ------ | ------ |
   | Create | 생성 | INSERT | POST   |
   | Read   | 읽기 | SELECT | GET    |
   | Update | 갱신 | UPDATE | PUT    |
   | Delete | 삭제 | DELETE | DELETE |

   - `GET`: URL로 데이터를 전달할 때 사용(file같은 큰 파일은 GET으로 전송하지 않는다, 아이디와 패스워드와 같은 민감한 데이터도 X) 라이트하게 사용할 수 있음, 링크 공유(캡슐화하지 않기 때문에 부하가 적음)
   - `POST`: 한번 캡슐화, 패킷 안에 데이터를 넣어 전달할 때 사용 (민감데이터 O, 큰 데이터 O)

6. 웹 서버는 받은 결과를 Client 브라우저에게 보냅니다.
7. 사용자 브라우저는 Response 받은 페이지를 렌더링하여 사용자에게 보여줍니다.

### 1.2 폼의 속성

| action | 입력 값을 전송할 페이지를 나타냅니다.(어디로 보낼 것이냐)                                                                                                                                                                                                                                                  |
| ------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| method | - 폼의 데이터를 전송할 방법을 정의합니다.<br>- method의 속성에는 get과 post가 있습니다.<br>- get은 웹 서버에 데이터를 요청할 때 사용하며, 주소에 데이터를 입력하는 방식이고, post는 파일을 올리거나, 보안이 필요한 데이터를 전송할 때 등 사용됩니다.<br>- 또한, 주소에 입력 내용이 나타나지 않도록 합니다. |

[form에서 put, delete를 지원하지 않는 경우](https://c3epmos.tistory.com/61)

<hr>

## 2. `<input>`

### 2.1 input의 속성

| Name        | 설명                                                                                                                                                       |
| ----------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |
| type        | 태그 모양을 다양하게 변경할 수 있습니다.<br>text, radio, checkbox, password, button 등…                                                                    |
| name        | 태그 이름을 지정합니다.                                                                                                                                    |
| readonly    | 태그를 읽기 전용으로 합니다.<br>예) 회원가입할 때 주민 등록 번호 입력 받으면 성별이 들어가는 경우<br>`<input type="text" name="성별" value="남" readonly>` |
| maxlength   | 최대 글자 수를 지정                                                                                                                                        |
| minlength   | 최소 글자 수를 지정                                                                                                                                        |
| required    | 필수 태그로 지정. 필수 태그를 입력하지 않고, submit 버튼을 누르면 에러가 떠 데이터가 전송되지 않습니다.(개인정보 동의 등)                                  |
| autofocus   | 웹 페이지가 로딩 되면 이 속성을 지정한 태그로 포커스가 바뀝니다.                                                                                           |
| placeholder | 입력할 값에 대한 힌트를 줍니다.                                                                                                                            |
| pattern     | 정규표현식을 사용하여 특정 범위 내의 유효한 값을 입력 받을 때 사용합니다.                                                                                  |

<figure>
<img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/d75f1212-d283-48a7-8560-27af070782ed/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20220907%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20220907T160758Z&X-Amz-Expires=86400&X-Amz-Signature=cf8cb41d2f0c2b5ee05e5cc2c61daa8447d0b1f85a5a8d2adcd374c2557f7fc8&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22&x-id=GetObject" width="50%">
<figurecaption>minlength</figurecaption>
</figure>
<figure>
<img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/f886d2fe-1703-4d59-b0ae-899afd9a2818/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20220907%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20220907T161657Z&X-Amz-Expires=86400&X-Amz-Signature=856cbc6062c46ae7678736cb189b11c71e8c005db714920f236becd7ba4ae5c4&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22&x-id=GetObject" width="50%">
<figurecaption>required</figurecaption>
</figure>

### 2.2 input 타입

| type     | 설명                                                              |
| -------- | ----------------------------------------------------------------- |
| text     | 입력한 text를 그대로 표현                                         |
| button   | 누를 수 있는 간단한 버튼을 만드는 input                           |
| password | 마스크 처리된 text input                                          |
| search   | 검색 창으로 사용할 수 있는 input → 우측에서 검색어 삭제할 수 있음 |
| date     | 날짜 입력                                                         |
| time     | 시간 입력                                                         |
| range    | 슬라이드 바 형식의 input                                          |
| number   | 숫자 선택                                                         |
| color    | 색 선택                                                           |
| radio    | 선택 항목 중 택 1                                                 |
| checkbox | 선택 항목 중 다중선택(0~)                                         |
| file     | 파일 업로드                                                       |
| email    | 이메일 주소 입력                                                  |
| url      | 웹페이지 주소 입력                                                |
| tel      | 전화번호 입력                                                     |

### form에 없는 데이터를 같이 넘기고 싶다면(사용자가 입력하지 않아도 필요한 값이 있을 때)

- 예시
  - 사용자가 접속한 IP
  - 로그인한 상태에서의 계정 정보
  - 게시물의 답글인 경우 게시물의 ID
- `<input type=”hidden”>`으로 처리
  - form에서 제출되는 데이터를 자바스크립트로 수정하는 일은 가능하면 하지 않는 것이 좋음
  - form에 없는 데이터를 추가하고 싶다면 hidden으로 input하나 더 만들어 value를 javascript로 추가하는 방식을 사용할 것

```html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <body>
    <form action="" method="">
      <input type="text" name="이름" value="홍길동" />
      <input type="hidden" name="나이" value="10" />
      <button type="submit">제출</button>
    </form>
  </body>
</html>
```

<hr>

## 3. `<label>`

- 무엇을 입력해야 하는지 설명
- 시각 장애인들도 폼을 사용할 수 있도록 시멘틱한 `<label`> 요소 사용할 것

### 3.1 `<label`>의 사용법

- 텍스트의 설명과 input 모두 포함
  ```html
  <label>
    이름:
    <input type="name" />
  </label>
  ```
- 폼 입력에서 분리하여 `for` 속성을 이용해 레이블을 지정하는 방식
  - id맞춰야 함
  ```html
  <label for="fullname">이름:</label>
  <input type="text" name="name" id="fullname" />
  ```

### 3.2 for 속성

<aside>
⚠️ &lt;labe&gt; for=”값”` == 해당 레이블이 속할 폼 컨트롤의 `id` 값과 일치

</aside>

- 레이블과 폼 컨트롤이 연결되면 레이블을 선택해도 해당하는 폼 컨트롤이 선택된 것과 같이 작동
- 사용자는 클릭 할 수 있는 영역이 더 넓어져 폼을 쉽게 사용할 수 있다.

<hr>

## 4. `<select>`

- 드롭다운 리스트 박스를 생성합니다.
- 리스트 박스안의 아이템을 만들 때에는 `<option>` 태그를 사용

```html
<form action="">
  <label for="myDevice"
    >현재 사용하고 있는 스마트폰의 제조사를 선택해주세요</label
  >
  <select name="device" id="myDevice">
    <option value="iphone">아이폰</option>
    <option value="galaxy">갤럭시폰</option>
    <option value="ㅜㅜ">LG폰</option>
  </select>
</form>
```

### 4.1 `<select>`의 속성들

- `multiple`
  - 속성을 사용하면 사용자가 여러개의 `option` 요소 다중 선택 가능
  - 단, 단순 클릭으로는 선택되지 않으며 windows 에서는 `ctrl`, OSX 에서는 `command` 버튼을 누르고 클릭해야 여러개를 선택할 수 있다.
- `size`
  - 드롭다운 리스트에서 한번에 보여줄 수 있는 `option`의 갯수를 조절

### 4.2 `<option>`의 속성들

- `value` 속성
  - 선택값에 따라 서버에 어떠한 값을 전송할지 설정할 수 있습니다.
- `selected` 속성
  - 기본으로 선택되는 옵션을 지정
  - `selected` 옵션을 사용하지 않으면 첫번째 `<option>` 이 페이지 로드 시 선택되고, 아무것도 선택하지 않고 데이터를 서버로 전송하면 첫번째 `<option>` 값의 `value` 가 전송됩니다.

<hr>

## 5. `<fieldset>`

- 자식 요소로 사용되는 폼 컨트롤들을 그룹화
- 폼 내용이 방대하여 섹션별로 나눌 필요성이 있을 경우 유용
- 브라우저가 기본적으로 구현하는 스타일을 보시면 그 의미가 더 명확.

```html
<!-- 브라우저에서 어떻게 표현되는지 확인해보세요 -->
<form action="">
  <fieldset>
    <legend>개인정보</legend>
    <label for="myName">이름</label>
    <input type="text" name="name" id="myName" />
    <label for="myTel">전화번호</label>
    <input type="tel" name="tel" id="myTel" />
    <label for="myEmail">이메일</label>
    <input type="email" name="email" id="myEmail" />
  </fieldset>
  <fieldset>
    <legend>개인정보 제공 동의</legend>
    <label for="checkAgree">개인정보 제공에 동의하십니까?</label>
    <input type="checkbox" name="agree" id="checkAgree" />
  </fieldset>
</form>
```

<hr>

## 6. `<legend>`

- `<fieldset>` 태그 바로 뒤에 위치
- 폼 그룹의 목적을 나타내는 **제목**을 의미
- 반드시 `<fieldset>` 안의 첫번째 자식으로 사용해야합니다.

```html
<fieldset>
  <legend>회원정보입력</legend>
  <ul>
    <li>
      <label for="member_id">아이디</label>
      <div>
        <input type="text" required placeholder="아이디 입력" id="member_id" />
        <button type="button">.......</button>
      </div>
    </li>
  </ul>
</fieldset>
```

<hr>

## 7. `<button>`

- 클릭 가능한 버튼
- 버튼의 모습을 다양하게 제어하고 버튼 내부에 다른 자식 요소를 추가하고 싶을 때 사용

### 7.1 button 태그의 type (버튼의 행동 방식)

type은 버튼의 행동 방식을 설정하는 속성

- `type: submit`
  - 버튼이 서버로 양식 데이터를 제출
  - <strong>기본값(intial value)</strong>이며, 유효하지 않은 값일 때도 사용
  - 페이지가 리프레시됨
- `type: reset`
  - `<input type="reset">`처럼, form의 모든 값을 초기화
- `type: button`
  - 클릭 가능한 버튼
  - 사용자가 기능을 부여하기 전까지는 별 다른 작동을 하지 X

<img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/d6a888c7-3375-4b6f-95e1-f87866955c85/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA_2021-10-30_%E1%84%8B%E1%85%A9%E1%84%92%E1%85%AE_7.42.14.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20220907%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20220907T162644Z&X-Amz-Expires=86400&X-Amz-Signature=a0586e19d79c26731e385b2bc583012842a2bff783ef64e0a1bd8ce0970202f5&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22%25E1%2584%2589%25E1%2585%25B3%25E1%2584%258F%25E1%2585%25B3%25E1%2584%2585%25E1%2585%25B5%25E1%2586%25AB%25E1%2584%2589%25E1%2585%25A3%25E1%2586%25BA%25202021-10-30%2520%25E1%2584%258B%25E1%2585%25A9%25E1%2584%2592%25E1%2585%25AE%25207.42.14.png%22&x-id=GetObject" width="400px">

```html
<!-- 네이버 메인 화면의 검색 버튼 html 구조 -->

<button id="search_btn" type="submit" title="검색">
  <span class="blind">검색</span>
  <span class="ico_search_submit"></span>
</button>
```

### 7.2 Input vs button 무엇을 써야할까?

| `<button>`                                                                                        |  `<input>`            |
| ------------------------------------------------------------------------------------------------- | --------------------- | ------------------------------------------ |
| 닫는 태그가 있음                                                                                  | 닫는 태그가 없음      |
| - 내부에 여러가지 자식 컨텐츠를 추가할 수 있다<br>- 가상 요소 사용 가능 (예. ::after , ::before ) | 가상 요소 사용 불가능 | value 특성에 텍스트 값 밖에 지정할 수 없음 |

→ 더 다채롭고 멋진 스타일을 적용해야 한다면 `<button>` 요소를 우선적으로 고려해 볼 것

<hr>

## 8. `<textarea>`

여러 줄의 text를 입력받기

### 8.1 `<textarea>`의 주요 속성

1. `cols`
   - textarea 입력창의 넓이
   - 문자의 평균적인 넓이를 기준
   - 양수 값만 사용할 수 있으며 기본값은 20입니다.
2. `rows`
   - textarea 입력창의 줄 수

```html
<textarea
  name=""
  id=""
  cols="40"
  rows="10"
  maxlength="10"
  minlength="5"
></textarea>
```

<hr>

## 9. `<datalist>`

- `<select>`와 `<input>` 을 섞어서 사용할 수 있도록함
- 정해진 옵션 외에 사용자가 원하는 임의의 값을 직접 입력할 수 있게끔 해주는 태그

<aside>
⚠️ &lt;input&gt; 의 list 속성 == &lt;datalist&gt; 요소의 `id` 속성과 연결하여 사용.

</aside>

<br>

```html
<label for="solasystem">원하는 행성을 선택하세요 : </label>
<input type="text" id="solasystem" list="planets" name="planets" />
<datalist id="planets">
  <option value="수성">수성</option>
  <option value="금성">금성</option>
  <option value="지구">지구</option>
  <option value="화성">화성</option>
</datalist>
```

---

<aside>
⚠️ 자주 사용되는 속성

- checked : 체크상태 표시
- required : 필수값
- min : 최솟값
- max : 최댓값
- value : 입력된 값
- placeholder : 입력값 힌트
- minlength : 최소 길이
- maxlength : 최대 길이
</aside>
